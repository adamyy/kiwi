apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 25
        applicationId "adamyy.github.com.kiwi"
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "API_VERSION", twitter_api_version
        buildConfigField "String", "API_KEY", twitter_api_key
        buildConfigField "String", "API_SECRET", twitter_api_secret
        buildConfigField "String", "API_CALLBACK", twitter_api_callback
        buildConfigField "String", "API_BASE_URL", twitter_api_base_url
    }
    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}

ext {
    okhttpVersion = "3.8.1"
    supportLibVersion = "25.4.0"
    archVersion = "1.0.0-alpha3"
    roomVersion = "1.0.0-alpha3"
    retrofitVersion = "2.3.0"
    rxAndroidVersion = "2.0.1"
    rxBindingVersion = "2.0.0"
    daggerVersion = "2.11"
    glideVersion = "4.0.0-RC1"

    leakCanaryVersion = "1.5.1"
}

dependencies {
    kapt "com.android.databinding:compiler:$plugin_version"

    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testCompile 'junit:junit:4.12'

    // support lib
    compile "com.android.support:design:$supportLibVersion"
    compile "com.android.support:appcompat-v7:$supportLibVersion"
    compile "com.android.support:cardview-v7:$supportLibVersion"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    // arch
    compile "android.arch.lifecycle:runtime:$archVersion"
    compile "android.arch.lifecycle:extensions:$archVersion"
    kapt "android.arch.lifecycle:compiler:$archVersion"
    compile "android.arch.persistence.room:runtime:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"
    compile "android.arch.persistence.room:rxjava2:$roomVersion"

    // retrofit
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // okhttp
    compile "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    compile "se.akerfeldt:okhttp-signpost:1.1.0"
    compile "oauth.signpost:signpost-core:1.2.1.2"

    // rxandroid
    compile "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    // rxbinding
    compile "com.jakewharton.rxbinding2:rxbinding:$rxBindingVersion"

    // dagger
    compile "com.google.dagger:dagger-android:$daggerVersion"
    compile "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // glide
    compile "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // leakcanary
    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
}

kapt {
    generateStubs = true
}